#include <ThingSpeak.h>
#include <ESP8266WiFi.h>
#define Relay1 14 
#define Relay2 12 
#define Relay3 13 
#define fan1 4 
#define fan2 0 
#define fan3 2 
#define led 5
#define buzzer 15

char ssid[] = "xxxx";      
char pass[] = "xxxx"; 

WiFiClient  client;

unsigned long counterChannelNumber = 1291272;
unsigned long counterChannelNumberapp = 1302512;
const char * myCounterReadAPIKey = "W6ATR0TF7A7UR0CT";
const char * myWriteAPIKey = "I788T3YTZT95ZI36";
unsigned long myCounterReadAPIKeyfan = 1310332;
unsigned long myCounterReadAPIKeylight = 1311100;
int field[4] = {1,2,3,4};
int fieldapp[5] = {1,2,3,4,5};
int fanapp[3] = {1,2,3};
int lightapp[3] = {1,2,3};

void setup()
{ 
  Serial.begin(9600);
  delay(10);
  WiFi.begin(ssid, pass);
      while (WiFi.status() != WL_CONNECTED)
      {
      delay(500);
      Serial.print(".");
      }
      Serial.println("");
    Serial.println("WiFi connected");
    ThingSpeak.begin(client);
    pinMode(Relay1, OUTPUT);
    pinMode(Relay2, OUTPUT);
    pinMode(Relay3, OUTPUT);
    pinMode(led, OUTPUT);
    digitalWrite(Relay1, HIGH);
    digitalWrite(Relay2, HIGH);
    digitalWrite(Relay3, HIGH);
    pinMode(fan1, OUTPUT);
    pinMode(fan2, OUTPUT);
    pinMode(fan3, OUTPUT);
    digitalWrite(fan1, LOW);
    digitalWrite(fan2, LOW);
    digitalWrite(fan3, LOW);
 }



void loop()
{

      int temp = ThingSpeak.readFloatField(counterChannelNumber, field[0]);
      int light = ThingSpeak.readFloatField(counterChannelNumber, field[1]);
      int motion = ThingSpeak.readFloatField(counterChannelNumber, field[2]);
      int gas = ThingSpeak.readFloatField(counterChannelNumber, field[3]);
      int fanspeed = ThingSpeak.readFloatField(counterChannelNumberapp, fieldapp[0]);
      int fanmode = ThingSpeak.readFloatField(counterChannelNumberapp, fieldapp[1]);
      int lightinten = ThingSpeak.readFloatField(counterChannelNumberapp, fieldapp[2]); 
      int lightmode = ThingSpeak.readFloatField(counterChannelNumberapp, fieldapp[3]);
      int buzzeroff = ThingSpeak.readFloatField(counterChannelNumberapp, fieldapp[4]);
      int fanspd1 = ThingSpeak.readFloatField(myCounterReadAPIKeyfan, fanapp[0]);
      int fanspd2 = ThingSpeak.readFloatField(myCounterReadAPIKeyfan, fanapp[1]);
      int fanspd3 = ThingSpeak.readFloatField(myCounterReadAPIKeyfan, fanapp[2]);
      int bright1 =ThingSpeak.readFloatField(myCounterReadAPIKeylight, lightapp[0]);
      int bright2 =ThingSpeak.readFloatField(myCounterReadAPIKeylight, lightapp[1]);
      int bright3 =ThingSpeak.readFloatField(myCounterReadAPIKeylight, lightapp[2]);     
           
            if(fanmode == 0)
            {   
                if(fanspeed == 1.00)
                {
                     digitalWrite(Relay1, LOW);
                     digitalWrite(Relay2, HIGH);
                     digitalWrite(Relay3, HIGH);
                     digitalWrite(fan1, HIGH);
                     digitalWrite(fan2, LOW);
                     digitalWrite(fan3, LOW);
                     Serial.println("Manual mode:Fan speed 1");
                     
                }else if(fanspeed == 2.00)
                {
                     digitalWrite(Relay1, HIGH);
                     digitalWrite(Relay2, LOW);
                     digitalWrite(Relay3, HIGH);
                     digitalWrite(fan2, HIGH);
                     digitalWrite(fan1, LOW);
                     digitalWrite(fan3, LOW);
                     Serial.println("Manual mode:Fan speed 2");
                
                }else if(fanspeed == 3.00)
                {
                      digitalWrite(Relay1, HIGH);
                      digitalWrite(Relay2, HIGH);
                      digitalWrite(Relay3, LOW);
                      digitalWrite(fan3, HIGH);
                      digitalWrite(fan2, LOW);
                      digitalWrite(fan1, LOW);
                      Serial.println("Manual mode:Fan speed 3");
                }else if(fanspeed == 0.00)
                {
                      
                       digitalWrite(Relay1, HIGH);
                       digitalWrite(Relay2, HIGH);
                       digitalWrite(Relay3, HIGH);
                       digitalWrite(fan1, LOW);
                       digitalWrite(fan2, LOW);
                       digitalWrite(fan3, LOW);
                       Serial.println("Manual mode:Fan is off");
                }else
                {
                      digitalWrite(fan1, LOW);
                      digitalWrite(fan2, LOW);
                      digitalWrite(fan3, LOW);
                      Serial.println("Fan is not connected to application. Please try again."); 
                }
                
                  
            } else if (fanmode == 1)
            {
                  if(motion > 0)
                  {
                    
                    if(temp >= fanspd1 && temp <= fanspd2)
                    {
                      
                     digitalWrite(Relay1, LOW);
                     digitalWrite(Relay2, HIGH);
                     digitalWrite(Relay3, HIGH);
                     digitalWrite(fan1, HIGH);
                     digitalWrite(fan2, LOW);
                     digitalWrite(fan3, LOW);
                     Serial.println("Auto mode:Fan speed 1");
                     
                    }else if(temp > fanspd2 && temp <= fanspd3)
                    {
                      
                     digitalWrite(Relay1, HIGH);
                     digitalWrite(Relay2, LOW);
                     digitalWrite(Relay3, HIGH);
                     digitalWrite(fan2, HIGH);
                     digitalWrite(fan1, LOW);
                     digitalWrite(fan3, LOW);
                     Serial.println("Auto mode:Fan speed 2");
                
                    }else if(temp > fanspd3)
                    {
                      
                      digitalWrite(Relay1, HIGH);
                      digitalWrite(Relay2, HIGH);
                      digitalWrite(Relay3, LOW);
                      digitalWrite(fan3, HIGH);
                      digitalWrite(fan2, LOW);
                      digitalWrite(fan1, LOW);
                      Serial.println("Auto mode:Fan speed 3");
                  
                    }else if(temp < fanspd1)
                    {
                         
                         digitalWrite(Relay1, HIGH);
                         digitalWrite(Relay2, HIGH);
                         digitalWrite(Relay3, HIGH);
                         digitalWrite(fan1, LOW);
                         digitalWrite(fan2, LOW);
                         digitalWrite(fan3, LOW);
                         Serial.println("Auto mode:Fan is turn off");
                    
                  }else
                  {
                           Serial.println("Channel is not connected");
                           digitalWrite(fan1, LOW);
                           digitalWrite(fan2, LOW);
                           digitalWrite(fan3, LOW);
                   }
                  }
                 else if(motion == 0)
                  {
                         
                         digitalWrite(Relay1, HIGH);
                         digitalWrite(Relay2, HIGH);
                         digitalWrite(Relay3, HIGH);
                         digitalWrite(fan1, LOW);
                         digitalWrite(fan2, LOW);
                         digitalWrite(fan3, LOW);
                         Serial.println("Fan is turn off. No one in the house");
                  }
                  
                  
            }else
                  {
                   digitalWrite(fan1, LOW);
                   digitalWrite(fan2, LOW);
                   digitalWrite(fan3, LOW);
                   Serial.println("Unable to read channel");
                }
              
               if(lightmode == 2)
               {
           
                 analogWrite(led, lightinten);
                 Serial.println("Brightness of led:" +String(lightinten)); 
            
              }else if(lightmode == 3)
              {
                    if(motion > 0)
                    {
                      if(light >= bright1)
                      {
                         
                         analogWrite(led, 0);
                         Serial.println("Brightness of led: 0" ); 
                      
                      }
                      else if(light >= bright2 && temp <= bright1) 
                      {
                         analogWrite(led, 256);
                          Serial.println("Brightness of led: 25%" );
    
                      }
                      else if(light >= bright3 && temp <= bright2) 
                      {
                         analogWrite(led, 512);
                          Serial.println("Brightness of led: 50%" );
    
                      } 
                      else if(light < bright3) 
                      {
                         analogWrite(led, 1022); 
                         Serial.println("Brightness of led: 100%" );               
                      }
                            
                      else 
                      {
                           analogWrite(led, 0);
                           Serial.println("Light channel is off");
                      }
                }else if (motion ==0)
                {
                   analogWrite(led, 0);
                   Serial.println("Light channel is off. No person in the house");
                  
                }else{
                        Serial.println("Light channel is not in auto mode");
                     }
              }else
              {
                  analogWrite(led, 0);
                  Serial.println("light is not connected to application. Please try again."); 
              }
              
          if(buzzeroff == 0)     
           {  
                  if(gas > 100)
                   {
                                   
                         tone(buzzer, 1000); 
                         delay(1000); 
                         Serial.println("Alert");  
                            
                   } 
                   else 
                   {
                             noTone(buzzer); 
                             delay(1000); 
                             Serial.println("Buzzer is off");
                             Serial.println("You are safe");
                    }
                 
           }else
               {           

                  noTone(buzzer); 
                  delay(1000); 
                  Serial.println("Buzzer is off by app");
                                
                }
           
           
            Serial.println();
            delay(10000);
                     
}
   